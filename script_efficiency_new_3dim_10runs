kl <- data.matrix(read.table("histogram.file"))

data_kl_00 <-data.matrix(read.table("mic/Hist2DcDim00")) 
data_kl_01 <-data.matrix(read.table("mic/Hist2DcDim01")) 
data_kl_02 <-data.matrix(read.table("mic/Hist2DcDim02")) 
data_kl_03 <-data.matrix(read.table("mic/Hist2DcDim03")) 
data_kl_04 <-data.matrix(read.table("mic/Hist2DcDim04")) 
data_kl_05 <-data.matrix(read.table("mic/Hist2DcDim05")) 
data_kl_06 <-data.matrix(read.table("mic/Hist2DcDim06")) 
data_kl_07 <-data.matrix(read.table("mic/Hist2DcDim07")) 
data_kl_08 <-data.matrix(read.table("mic/Hist2DcDim08")) 
data_kl_09 <-data.matrix(read.table("mic/Hist2DcDim09")) 

kl_distance <- matrix(nrow = 1,ncol = 10)
kl_distance1 <- matrix(nrow = 1, ncol = 10)
for(i in 1:10){
	kl_distance[1,i] <- 0;
	kl_distance1[1,i] <- 0
}

nr_bin <- 60^3
limit <- 1*10^-6

temp1 <- 1
for(i in 1:nr_bin) 
	if(kl[i,1] == data_kl_00[temp1,1] && kl[i,2] == data_kl_00[temp1,2]&& kl[i,3] == data_kl_00[temp1,3]) {
		kl_distance[1,1] <- kl_distance[1,1] + data_kl_00[temp1,4] * log(data_kl_00[temp1,4]/kl[i,4]);
		kl_distance1[1,1] <- kl_distance1[1,1] + data_kl_00[temp1,6] * log(data_kl_00[temp1,6]/kl[i,5]);	
		if(temp1 < length(data_kl_00[,1]))  temp1 <- temp1+1
	} else {
		if(kl[i,4] > 0.01) kl_distance[1,1] <- kl_distance[1,1] + 3000; 
		if(kl[i,5] > limit) kl_distance1[1,1] <- kl_distance1[1,1] + 3000
	}

temp1 <- 1
for(i in 1:nr_bin) 
	if(kl[i,1] == data_kl_01[temp1,1] && kl[i,2] == data_kl_01[temp1,2]&& kl[i,3] == data_kl_01[temp1,3]) {
		kl_distance[1,2] <- kl_distance[1,2] + data_kl_01[temp1,4] * log(data_kl_01[temp1,4]/kl[i,4]);
		kl_distance1[1,2] <- kl_distance1[1,2] + data_kl_01[temp1,6] * log(data_kl_01[temp1,6]/kl[i,5]);	
		if(temp1 < length(data_kl_01[,1]))  temp1 <- temp1+1
	} else {
		if(kl[i,4] > 0.01) kl_distance[1,2] <- kl_distance[1,2] + 3000; 
		if(kl[i,5] > limit) kl_distance1[1,2] <- kl_distance1[1,2] + 3000
	}

temp1 <- 1
for(i in 1:nr_bin) 
	if(kl[i,1] == data_kl_02[temp1,1] && kl[i,2] == data_kl_02[temp1,2]&& kl[i,3] == data_kl_02[temp1,3]) {
		kl_distance[1,3] <- kl_distance[1,3] + data_kl_02[temp1,4] * log(data_kl_02[temp1,4]/kl[i,4]);
		kl_distance1[1,3] <- kl_distance1[1,3] + data_kl_02[temp1,6] * log(data_kl_02[temp1,6]/kl[i,5]);	
		if(temp1 < length(data_kl_02[,1]))  temp1 <- temp1+1
	} else {
		if(kl[i,4] > 0.01) kl_distance[1,3] <- kl_distance[1,3] + 3000; 
		if(kl[i,5] > limit) kl_distance1[1,3] <- kl_distance1[1,3] + 3000
	}

temp1 <- 1
for(i in 1:nr_bin) 
	if(kl[i,1] == data_kl_03[temp1,1] && kl[i,2] == data_kl_03[temp1,2]&& kl[i,3] == data_kl_03[temp1,3]) {
		kl_distance[1,4] <- kl_distance[1,4] + data_kl_03[temp1,4] * log(data_kl_03[temp1,4]/kl[i,4]);
		kl_distance1[1,4] <- kl_distance1[1,4] + data_kl_03[temp1,6] * log(data_kl_03[temp1,6]/kl[i,5]);	
		if(temp1 < length(data_kl_03[,1]))  temp1 <- temp1+1
	} else {
		if(kl[i,4] > 0.01) kl_distance[1,4] <- kl_distance[1,4] + 3000; 
		if(kl[i,5] > limit) kl_distance1[1,4] <- kl_distance1[1,4] + 3000
	}

temp1 <- 1
for(i in 1:nr_bin) 
	if(kl[i,1] == data_kl_04[temp1,1] && kl[i,2] == data_kl_04[temp1,2]&& kl[i,3] == data_kl_04[temp1,3]) {
		kl_distance[1,5] <- kl_distance[1,5] + data_kl_04[temp1,4] * log(data_kl_04[temp1,4]/kl[i,4]);
		kl_distance1[1,5] <- kl_distance1[1,5] + data_kl_04[temp1,6] * log(data_kl_04[temp1,6]/kl[i,5]);	
		if(temp1 < length(data_kl_04[,1]))  temp1 <- temp1+1
	} else {
		if(kl[i,4] > 0.01) kl_distance[1,5] <- kl_distance[1,5] + 3000; 
		if(kl[i,5] > limit) kl_distance1[1,5] <- kl_distance1[1,5] + 3000
	}

temp1 <- 1
for(i in 1:nr_bin) 
	if(kl[i,1] == data_kl_05[temp1,1] && kl[i,2] == data_kl_05[temp1,2]&& kl[i,3] == data_kl_05[temp1,3]) {
		kl_distance[1,6] <- kl_distance[1,6] + data_kl_05[temp1,4] * log(data_kl_05[temp1,4]/kl[i,4]);
		kl_distance1[1,6] <- kl_distance1[1,6] + data_kl_05[temp1,6] * log(data_kl_05[temp1,6]/kl[i,5]);	
		if(temp1 < length(data_kl_05[,1]))  temp1 <- temp1+1
	} else {
		if(kl[i,4] > 0.01) kl_distance[1,6] <- kl_distance[1,6] + 3000; 
		if(kl[i,5] > limit) kl_distance1[1,6] <- kl_distance1[1,6] + 3000
	}

temp1 <- 1
for(i in 1:nr_bin) 
	if(kl[i,1] == data_kl_06[temp1,1] && kl[i,2] == data_kl_06[temp1,2]&& kl[i,3] == data_kl_06[temp1,3]) {
		kl_distance[1,7] <- kl_distance[1,7] + data_kl_06[temp1,4] * log(data_kl_06[temp1,4]/kl[i,4]);
		kl_distance1[1,7] <- kl_distance1[1,7] + data_kl_06[temp1,6] * log(data_kl_06[temp1,6]/kl[i,5]);	
		if(temp1 < length(data_kl_06[,1]))  temp1 <- temp1+1
	} else {
		if(kl[i,4] > 0.01) kl_distance[1,7] <- kl_distance[1,7] + 3000; 
		if(kl[i,5] > limit) kl_distance1[1,7] <- kl_distance1[1,7] + 3000
	}

temp1 <- 1
for(i in 1:nr_bin) 
	if(kl[i,1] == data_kl_07[temp1,1] && kl[i,2] == data_kl_07[temp1,2]&& kl[i,3] == data_kl_07[temp1,3]) {
		kl_distance[1,8] <- kl_distance[1,8] + data_kl_07[temp1,4] * log(data_kl_07[temp1,4]/kl[i,4]);
		kl_distance1[1,8] <- kl_distance1[1,8] + data_kl_07[temp1,6] * log(data_kl_07[temp1,6]/kl[i,5]);	
		if(temp1 < length(data_kl_07[,1]))  temp1 <- temp1+1
	} else {
		if(kl[i,4] > 0.01) kl_distance[1,8] <- kl_distance[1,8] + 3000; 
		if(kl[i,5] > limit) kl_distance1[1,8] <- kl_distance1[1,8] + 3000
	}

temp1 <- 1
for(i in 1:nr_bin) 
	if(kl[i,1] == data_kl_08[temp1,1] && kl[i,2] == data_kl_08[temp1,2]&& kl[i,3] == data_kl_08[temp1,3]) {
		kl_distance[1,9] <- kl_distance[1,9] + data_kl_08[temp1,4] * log(data_kl_08[temp1,4]/kl[i,4]);
		kl_distance1[1,9] <- kl_distance1[1,9] + data_kl_08[temp1,6] * log(data_kl_08[temp1,6]/kl[i,5]);	
		if(temp1 < length(data_kl_08[,1]))  temp1 <- temp1+1
	} else {
		if(kl[i,4] > 0.01) kl_distance[1,9] <- kl_distance[1,9] + 3000; 
		if(kl[i,5] > limit) kl_distance1[1,9] <- kl_distance1[1,9] + 3000
	}

temp1 <- 1
for(i in 1:nr_bin) 
	if(kl[i,1] == data_kl_09[temp1,1] && kl[i,2] == data_kl_09[temp1,2]&& kl[i,3] == data_kl_09[temp1,3]) {
		kl_distance[1,10] <- kl_distance[1,10] + data_kl_09[temp1,4] * log(data_kl_09[temp1,4]/kl[i,4]);
		kl_distance1[1,10] <- kl_distance1[1,10] + data_kl_09[temp1,6] * log(data_kl_09[temp1,6]/kl[i,5]);	
		if(temp1 < length(data_kl_09[,1]))  temp1 <- temp1+1
	} else {
		if(kl[i,4] > 0.01) kl_distance[1,10] <- kl_distance[1,10] + 3000; 
		if(kl[i,5] > limit) kl_distance1[1,10] <- kl_distance1[1,10] + 3000
	}


resTable <- matrix(nrow = 1, ncol = 11)
resTable[1,1] <- 0.1
resTable[1,2] <- mean(kl_distance[1,])
resTable[1,3] <- sqrt(var(kl_distance[1,]))
resTable[1,4] <- mean(kl_distance1[1,])
resTable[1,5] <- sqrt(var(kl_distance1[1,]))
resTable[1,6] <- mean(floor(kl_distance1[1,])/3000)
resTable[1,7] <- sqrt(var(floor(kl_distance1[1,])/3000))
resTable[1,8] <- mean(kl_distance1[1,] - floor(kl_distance1[1,]/1000)*1000)
resTable[1,9] <- sqrt(var(kl_distance1[1,] - floor(kl_distance1[1,]/1000)*1000))

data_kl <-data.matrix(read.table("mic/outMutHashAllChainNoSplit")) 
kl_distance11 <- 0
kl_distance12 <- 0
temp1 <- 1
for(i in 1:nr_bin) 
	if(kl[i,1] == data_kl[temp1,1] && kl[i,2] == data_kl[temp1,2]&& kl[i,3] == data_kl[temp1,3]) {
		kl_distance11 <- kl_distance11 + data_kl[temp1,4] * log(data_kl[temp1,4]/kl[i,4]);
		kl_distance12 <- kl_distance12 + data_kl[temp1,15] * log(data_kl[temp1,15]/kl[i,5]);	
		if(temp1 < length(data_kl[,1]))  temp1 <- temp1+1
	} else {
		if(kl[i,4] > 0.01) kl_distance11 <- kl_distance11 + 3000; 
		if(kl[i,5] > limit) kl_distance12 <- kl_distance12 + 3000
	}

resTable[1,10] <- kl_distance11
resTable[1,11] <- kl_distance12

write.table("#mic/ --->> cov(1,1) stdCov rotCov(1,1->2,2) rotStd cor(1,2) stdCor", "kl_distance", append = TRUE)
write.table(data.frame(resTable), "kl_distance", append = TRUE)
write.table(data.frame(kl_distance1), "kl_distance", append = TRUE)
write.table(data.frame(kl_distance1 - floor(kl_distance1/1000)*1000), "kl_distance", append = TRUE)
